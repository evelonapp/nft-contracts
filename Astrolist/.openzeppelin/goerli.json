{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xefe78b490A8Ca959c3428163a87d36bf081bB8f8",
      "txHash": "0x017724b5ac3fc6b23867abdc7055f16535365cc447308130e86c2960347ae8ad",
      "kind": "uups"
    }
  ],
  "impls": {
    "977bc36e74461a50e22e56a3834033ee1de06d1bc5e0de42ce965fdb3d125569": {
      "address": "0xA8b2De8DbFAd603A0036A28a2d12582793BC3C9F",
      "txHash": "0x1d648cbaac4d32cebf6a78f569070008c458dcaf0c69ab86966374a7200a19ff",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_isWhiteListed",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AstrolistSell",
            "src": "contracts/AstrolistSell.sol:23"
          },
          {
            "label": "_isNotEligible",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AstrolistSell",
            "src": "contracts/AstrolistSell.sol:25"
          },
          {
            "label": "_isIdTaken",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "AstrolistSell",
            "src": "contracts/AstrolistSell.sol:27"
          },
          {
            "label": "_collectorAddress",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "AstrolistSell",
            "src": "contracts/AstrolistSell.sol:29"
          },
          {
            "label": "_nftToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC1155)7910",
            "contract": "AstrolistSell",
            "src": "contracts/AstrolistSell.sol:31"
          },
          {
            "label": "_erc20Token",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(IERC20)7920",
            "contract": "AstrolistSell",
            "src": "contracts/AstrolistSell.sol:33"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "AstrolistSell",
            "src": "contracts/AstrolistSell.sol:35"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "AstrolistSell",
            "src": "contracts/AstrolistSell.sol:37"
          },
          {
            "label": "_whiteListedAddresses",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AstrolistSell",
            "src": "contracts/AstrolistSell.sol:39"
          },
          {
            "label": "_isValidReferralId",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "AstrolistSell",
            "src": "contracts/AstrolistSell.sol:46"
          },
          {
            "label": "_referralData",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_bytes32,t_struct(ReferralData)7976_storage)",
            "contract": "AstrolistSell",
            "src": "contracts/AstrolistSell.sol:55"
          },
          {
            "label": "_allReferrals",
            "offset": 0,
            "slot": "212",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "AstrolistSell",
            "src": "contracts/AstrolistSell.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC1155)7910": {
            "label": "contract IERC1155",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)7920": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ReferralData)7976_storage)": {
            "label": "mapping(bytes32 => struct AstrolistSell.ReferralData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ReferralData)7976_storage": {
            "label": "struct AstrolistSell.ReferralData",
            "members": [
              {
                "label": "totalClaimes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalBuyes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "buyerAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "claimerAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
