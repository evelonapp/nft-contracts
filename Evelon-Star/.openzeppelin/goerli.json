{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x943A176f95699A95DbE942383696Ae3BF585e364",
      "txHash": "0x770b8d154f2fa7602d46dc5dd56435fb6c4bf9fe34b925fef707f4d804e8bf74",
      "kind": "uups"
    },
    {
      "address": "0xBF92E41C91F03b4f5C06d74A4CD05369aD2A7054",
      "txHash": "0x4880ecfdc1d62f6529bb33470288e540ea16abb52b87a13fe7c61a7d2f7b1700",
      "kind": "uups"
    },
    {
      "address": "0x1bd663E4726B55e6e6413936D90210DbD4EF314e",
      "txHash": "0xa0c716cb12f5852f04ad1f3f5e35057493d949c585eba203d59a93825eb1f626",
      "kind": "uups"
    },
    {
      "address": "0x3BD2B27e880248703A795f9214dbD1E7CeF12CAD",
      "txHash": "0xcb18c0f382c7fcb872583081b7f268e75e45b286dae061fc7ebf2c90ee197cfc",
      "kind": "uups"
    },
    {
      "address": "0xc3D2334B9921C79CE6A5B462d1002D21AdD787D5",
      "txHash": "0xc719bea0256b0fa798d4390cb368dc833c36a516f7d78c8be8126e46be75a00c",
      "kind": "uups"
    },
    {
      "address": "0xAB452D22d70dE764EdFE475BFEaBE87BFD833B29",
      "txHash": "0xf8332e8f8c3feb1ed992f3c1dba4e2e6046df06216d016d31cc1185e923fa0d9",
      "kind": "uups"
    },
    {
      "address": "0x00702f8360d212FD489EeE67C7a15a48c99ffEdb",
      "txHash": "0x1ed96b5c5410d833192d289d9a6427c47bae70f5bdc49e6d5df7bb0b52460746",
      "kind": "uups"
    },
    {
      "address": "0x1b910543E95faDF27c214A14D55A60339aC40474",
      "txHash": "0x6d826ad354921aa4b6578b9bed3c5a60e4e957333f3389d30bcce63eb590d066",
      "kind": "uups"
    },
    {
      "address": "0x7A981Aab21070cF25a9Ef648487adce44992eAcE",
      "txHash": "0x447d51ebaa4d97273e486f571d7462efdb3840acab880ed8bda11022827d8228",
      "kind": "uups"
    },
    {
      "address": "0x01f3564166205CeBa1f33E689A4281cD99C3d399",
      "txHash": "0xf095496de305ab47796af1876d1555ddd71ac19f267a51535cd7e9ea8c7caab4",
      "kind": "uups"
    },
    {
      "address": "0xE8b658b713AF6B8E0a1c50e1AE2EA0f79490F9F7",
      "txHash": "0xe75f4db3796873871943b800a503476dba36575a60f9b2c3ce1f3d68974e1a97",
      "kind": "uups"
    },
    {
      "address": "0x8E815a3549eaF59Bae6E26cd79f89222feD08611",
      "txHash": "0xcf245619b662a31ef40eea2fede7b66a2550783830f6a6c8412e17ba817932e2",
      "kind": "uups"
    },
    {
      "address": "0xDB37a1FE90E8400dAEb94c2b3CE645B911c3fD8e",
      "txHash": "0xef834e584fccf2ecd081f09dde7c2af6c4098c241a700af61203cbd4b841e1a2",
      "kind": "uups"
    },
    {
      "address": "0x9f8694d74fEf16a48FBCbf3b83547e12d8af9EfE",
      "txHash": "0xd41e8ca865c902e19f3791aacc45f3109d1c103c71bd98666d966814ca4d627f",
      "kind": "uups"
    },
    {
      "address": "0x253Dd1cBDDcaDB377bC00480E61daE4DA66E97f9",
      "txHash": "0x5708c69f83d99982453de6150bd3c2b04e523b388e7f176e014451e358420edf",
      "kind": "uups"
    }
  ],
  "impls": {
    "fdff56536f1a8d082d3ddefeb3b32157cf3db32677bed619a141d2b91927526b": {
      "address": "0xe4011a7364a7D822B94e6aaf7cB0018B4B0ea82b",
      "txHash": "0x1ebd76ee8e3e99a84869257952e8179a1cec63f0a1a3a47e842ef91cb8556a61",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:224"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(Counter)2787_storage",
            "contract": "CepheusStars",
            "src": "contracts/NFT.sol:23"
          },
          {
            "label": "_nftType",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CepheusStars",
            "src": "contracts/NFT.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2787_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "210d3ae585505bca3d34e1f61373f075d464a4a0fa32f3247278cd6f94123371": {
      "address": "0xf731f167fe93b8456549F7ab3695CCef3BB6E58F",
      "txHash": "0xe0145101a49dcddf23f103f4045614a1400dc50b1ea85ecfd5c2ad4215b4b5c1",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_astro",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAstroSale)1465",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:23"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INFT)2308",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:24"
          },
          {
            "label": "_tokenBusd",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20)2159",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:25"
          },
          {
            "label": "_nftBuyPrices",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:26"
          },
          {
            "label": "collectorAddress",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_string_storage)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:28"
          },
          {
            "label": "_nftSettings",
            "offset": 0,
            "slot": "261",
            "type": "t_struct(NFTSettings)1507_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:33"
          },
          {
            "label": "_isValidReferralId",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:34"
          },
          {
            "label": "_allReferrals",
            "offset": 0,
            "slot": "263",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:35"
          },
          {
            "label": "totalPurchasePerLinkPerType",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:36"
          },
          {
            "label": "presaleDis",
            "offset": 0,
            "slot": "265",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:37"
          },
          {
            "label": "_nftInfo",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_uint256,t_struct(NFTSettings)1507_storage)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)3_storage": {
            "label": "string[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAstroSale)1465": {
            "label": "contract IAstroSale",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)2159": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(INFT)2308": {
            "label": "contract INFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTSettings)1507_storage)": {
            "label": "mapping(uint256 => struct NFTStakingPresale.NFTSettings)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFTSettings)1507_storage": {
            "label": "struct NFTStakingPresale.NFTSettings",
            "members": [
              {
                "label": "sold",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "total",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1bedd2a1c94027e46a152f93a6eeb6bffed40043b6cc2d45011467ba11336edb": {
      "address": "0x0765F48Ad6b13B0eEe1406f3E38F0dfFdA10b030",
      "txHash": "0x2daebb1632642f53df53f2fe50dd9f72dd26f0d169191ba751060d68a39bfe9b",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_astro",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAstroSale)3879",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:23"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INFT)5109",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:24"
          },
          {
            "label": "_tokenBusd",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20)4960",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:25"
          },
          {
            "label": "_nftBuyPrices",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:26"
          },
          {
            "label": "collectorAddress",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_string_storage)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:28"
          },
          {
            "label": "_nftSettings",
            "offset": 0,
            "slot": "261",
            "type": "t_struct(NFTSettings)3921_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:33"
          },
          {
            "label": "_isValidReferralId",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:34"
          },
          {
            "label": "_allReferrals",
            "offset": 0,
            "slot": "263",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:35"
          },
          {
            "label": "totalPurchasePerLinkPerType",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:36"
          },
          {
            "label": "presaleDis",
            "offset": 0,
            "slot": "265",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:37"
          },
          {
            "label": "_nftInfo",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_uint256,t_struct(NFTSettings)3921_storage)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)3_storage": {
            "label": "string[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAstroSale)3879": {
            "label": "contract IAstroSale",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)4960": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(INFT)5109": {
            "label": "contract INFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTSettings)3921_storage)": {
            "label": "mapping(uint256 => struct NFTStakingPresale.NFTSettings)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFTSettings)3921_storage": {
            "label": "struct NFTStakingPresale.NFTSettings",
            "members": [
              {
                "label": "sold",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "total",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "de353da70cb0c4a1de4e4d60a7ea42443ba0e8ce7ab94924893bf2ac1a08cb0b": {
      "address": "0x6FC61cba8cB8aC8F71aEFFe4174F9caF9fD77d49",
      "txHash": "0xfb07c82131cda3a55d51d6c5189605a99f6bf3372c6d86657b5f0dc8ff2cb392",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:224"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(Counter)2608_storage",
            "contract": "CepheusRigel",
            "src": "contracts/RigelNFT.sol:22"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "402",
            "type": "t_string_storage",
            "contract": "CepheusRigel",
            "src": "contracts/RigelNFT.sol:28"
          },
          {
            "label": "_blockTransferUntil",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "CepheusRigel",
            "src": "contracts/RigelNFT.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2608_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8e3258dcf445ece7015d3bbfae97317d977a73086344fa69e4cd79e22b1c479f": {
      "address": "0x009870C480eCfa4946D03Cf769DA1Ef7C44239F5",
      "txHash": "0x8fc0597f2ff07daea840c77402e5f64eaca55750e332d079a2c436c06b03e0a8",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:224"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(Counter)2608_storage",
            "contract": "CepheusSirius",
            "src": "contracts/SiriusNFT.sol:22"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "402",
            "type": "t_string_storage",
            "contract": "CepheusSirius",
            "src": "contracts/SiriusNFT.sol:28"
          },
          {
            "label": "_blockTransferUntil",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "CepheusSirius",
            "src": "contracts/SiriusNFT.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2608_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "beed9c6c327735187ef86b653c775a76325f026133a7ccda9f1c2d51ae9f1f4b": {
      "address": "0xeE7F5fB8F66d13c280e9e0E511Bd88F36DD06d23",
      "txHash": "0x4cbe6fd923637919b5b0918d1e0d92557009553a3fbd010b2332a50f89bb65ae",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:224"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(Counter)2608_storage",
            "contract": "CepheusVega",
            "src": "contracts/VegaNFT.sol:22"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "402",
            "type": "t_string_storage",
            "contract": "CepheusVega",
            "src": "contracts/VegaNFT.sol:28"
          },
          {
            "label": "_blockTransferUntil",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "CepheusVega",
            "src": "contracts/VegaNFT.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2608_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "656732fa646730429fc6c5480e11362981dd3f96fd44cb10ee8829792badee54": {
      "address": "0x919Ef2E7E701B3a419AdB203cBd592f538d52909",
      "txHash": "0x6ceaba10ca3b63d03d02cff0d6f46a6433c4617b7360db038a54eafb0af89400",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_astro",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAstroSale)1465",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:23"
          },
          {
            "label": "_rigel",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INFT)2477",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:24"
          },
          {
            "label": "_sirius",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(INFT)2477",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:25"
          },
          {
            "label": "_vega",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(INFT)2477",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:26"
          },
          {
            "label": "_tokenBusd",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(IERC20)2330",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:27"
          },
          {
            "label": "_nftBuyPrices",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:28"
          },
          {
            "label": "collectorAddress",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:29"
          },
          {
            "label": "isAstroNftNeccesary",
            "offset": 20,
            "slot": "259",
            "type": "t_bool",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:30"
          },
          {
            "label": "_nftSettings",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(NFTSettings)1511_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:36"
          },
          {
            "label": "_isValidReferralId",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:37"
          },
          {
            "label": "_allReferrals",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:38"
          },
          {
            "label": "totalPurchasePerLinkPerType",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:39"
          },
          {
            "label": "presaleDis",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:40"
          },
          {
            "label": "_nftInfo",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_uint256,t_struct(NFTSettings)1511_storage)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAstroSale)1465": {
            "label": "contract IAstroSale",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)2330": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(INFT)2477": {
            "label": "contract INFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTSettings)1511_storage)": {
            "label": "mapping(uint256 => struct NFTStakingPresale.NFTSettings)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTSettings)1511_storage": {
            "label": "struct NFTStakingPresale.NFTSettings",
            "members": [
              {
                "label": "sold",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "total",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f04d94f881b937e7f54355c4a054dec293a7b8fc92fb659c4a70f3e1c5487e9e": {
      "address": "0x3e00982CeEaa70cfB31B36706bCa0d2d76e59b0e",
      "txHash": "0xe0f13d0a4b26fbb1eb5b25fc64aa962c75fb0d107d3156b8b102684bf04250d4",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_astro",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAstroSale)1465",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:23"
          },
          {
            "label": "_rigel",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INFT)2525",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:24"
          },
          {
            "label": "_sirius",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(INFT)2525",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:25"
          },
          {
            "label": "_vega",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(INFT)2525",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:26"
          },
          {
            "label": "_tokenBusd",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(IERC20)2378",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:27"
          },
          {
            "label": "_nftBuyPrices",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:28"
          },
          {
            "label": "collectorAddress",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:29"
          },
          {
            "label": "isAstroNftNeccesary",
            "offset": 20,
            "slot": "259",
            "type": "t_bool",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:30"
          },
          {
            "label": "_nftSettings",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(NFTSettings)1511_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:36"
          },
          {
            "label": "_isValidReferralId",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:37"
          },
          {
            "label": "_allReferrals",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:38"
          },
          {
            "label": "totalPurchasePerLinkPerType",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:39"
          },
          {
            "label": "presaleDis",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:40"
          },
          {
            "label": "_nftInfo",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_uint256,t_struct(NFTSettings)1511_storage)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAstroSale)1465": {
            "label": "contract IAstroSale",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)2378": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(INFT)2525": {
            "label": "contract INFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTSettings)1511_storage)": {
            "label": "mapping(uint256 => struct NFTStakingPresale.NFTSettings)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTSettings)1511_storage": {
            "label": "struct NFTStakingPresale.NFTSettings",
            "members": [
              {
                "label": "sold",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "total",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3081d19893f4e677be28545c78c8bccf463f2edfa36d03f034fda2756743cb98": {
      "address": "0x6c5EC3e821301348c7E98DEAC20F4c7fB8418341",
      "txHash": "0xe651b701aa526725a1c9c364121ff14c03f7d26a918c4d4a726306e208164015",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:224"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(Counter)2787_storage",
            "contract": "CepheusRigel",
            "src": "contracts/RigelNFT.sol:22"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "402",
            "type": "t_string_storage",
            "contract": "CepheusRigel",
            "src": "contracts/RigelNFT.sol:28"
          },
          {
            "label": "_blockTransferUntil",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "CepheusRigel",
            "src": "contracts/RigelNFT.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2787_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5ab3d57278b73f11898b61dc7df58f0fb241088e333bc47858e0cbff07ab92c0": {
      "address": "0x5E9DE184bfc37cE971d1F64762a4D886af187cB7",
      "txHash": "0x68dc789e420b5827b1ec51562768a42b641650a98996093f246e85d7fe45155c",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:224"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(Counter)2787_storage",
            "contract": "CepheusSirius",
            "src": "contracts/SiriusNFT.sol:22"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "402",
            "type": "t_string_storage",
            "contract": "CepheusSirius",
            "src": "contracts/SiriusNFT.sol:28"
          },
          {
            "label": "_blockTransferUntil",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "CepheusSirius",
            "src": "contracts/SiriusNFT.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2787_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a5f76efb53d15e0fbd6366f0a271be47faa2be2614af98e8d4cdb15e03a9f241": {
      "address": "0x13461Ec7acc495b4cfC1b4f0f982ef9743c9664E",
      "txHash": "0x12f5084396b89e59e62ba72e548a08fb6c91a361a1ba37620ca54063b9c6b965",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:224"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(Counter)2787_storage",
            "contract": "CepheusVega",
            "src": "contracts/VegaNFT.sol:22"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "402",
            "type": "t_string_storage",
            "contract": "CepheusVega",
            "src": "contracts/VegaNFT.sol:28"
          },
          {
            "label": "_blockTransferUntil",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "CepheusVega",
            "src": "contracts/VegaNFT.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2787_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d976b6413c8e906fda56f1b6f1e4542c8b4d2ea0787ef2f7945c7409f1774b87": {
      "address": "0x48Ff8ffa596e80F58063762Fcf00A83FB03813F0",
      "txHash": "0x674a2b591307c34b0de426a64fdd2df32cac892715f19b903a6e4c7b117e3c9e",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_astro",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAstroSale)1465",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:23"
          },
          {
            "label": "_rigel",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INFT)2577",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:24"
          },
          {
            "label": "_sirius",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(INFT)2577",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:25"
          },
          {
            "label": "_vega",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(INFT)2577",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:26"
          },
          {
            "label": "_tokenBusd",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(IERC20)2430",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:27"
          },
          {
            "label": "_nftBuyPrices",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:28"
          },
          {
            "label": "collectorAddress",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:29"
          },
          {
            "label": "isAstroNftNeccesary",
            "offset": 20,
            "slot": "259",
            "type": "t_bool",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:30"
          },
          {
            "label": "_nftSettings",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(NFTSettings)1511_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:36"
          },
          {
            "label": "_isValidReferralId",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:37"
          },
          {
            "label": "_allReferrals",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:38"
          },
          {
            "label": "totalPurchasePerLinkPerType",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:39"
          },
          {
            "label": "presaleDis",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:40"
          },
          {
            "label": "_nftInfo",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_uint256,t_struct(NFTSettings)1511_storage)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:41"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "268",
            "type": "t_array(t_string_storage)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:42"
          },
          {
            "label": "_suffix",
            "offset": 0,
            "slot": "271",
            "type": "t_string_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)3_storage": {
            "label": "string[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAstroSale)1465": {
            "label": "contract IAstroSale",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)2430": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(INFT)2577": {
            "label": "contract INFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTSettings)1511_storage)": {
            "label": "mapping(uint256 => struct NFTStakingPresale.NFTSettings)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFTSettings)1511_storage": {
            "label": "struct NFTStakingPresale.NFTSettings",
            "members": [
              {
                "label": "sold",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "total",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "375909b4f59c4925fd302462667609add6af1f8e3e6d28c56329bd721403de7b": {
      "address": "0xBfEc52611cF8e522163611297C68bCB28e742c7d",
      "txHash": "0xf05ba9745869d780fc9a6cb93b41f99f3aba1f9068cdcd072cc97a5568766811",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_astro",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAstroSale)1465",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:23"
          },
          {
            "label": "_rigel",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INFT)2687",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:24"
          },
          {
            "label": "_sirius",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(INFT)2687",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:25"
          },
          {
            "label": "_vega",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(INFT)2687",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:26"
          },
          {
            "label": "_tokenBusd",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(IERC20)2540",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:27"
          },
          {
            "label": "_nftBuyPrices",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:28"
          },
          {
            "label": "collectorAddress",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:29"
          },
          {
            "label": "isAstroNftNeccesary",
            "offset": 20,
            "slot": "259",
            "type": "t_bool",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:30"
          },
          {
            "label": "_nftSettings",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(NFTSettings)1511_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:36"
          },
          {
            "label": "_isValidReferralId",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:37"
          },
          {
            "label": "_allReferrals",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:38"
          },
          {
            "label": "totalPurchasePerLinkPerType",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:39"
          },
          {
            "label": "presaleDis",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:40"
          },
          {
            "label": "_nftInfo",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_uint256,t_struct(NFTSettings)1511_storage)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:41"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "268",
            "type": "t_array(t_string_storage)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:42"
          },
          {
            "label": "_suffix",
            "offset": 0,
            "slot": "271",
            "type": "t_string_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)3_storage": {
            "label": "string[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAstroSale)1465": {
            "label": "contract IAstroSale",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)2540": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(INFT)2687": {
            "label": "contract INFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTSettings)1511_storage)": {
            "label": "mapping(uint256 => struct NFTStakingPresale.NFTSettings)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFTSettings)1511_storage": {
            "label": "struct NFTStakingPresale.NFTSettings",
            "members": [
              {
                "label": "sold",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "total",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bfa9eaf75ee727c4b79028340b57f1f6ab6e225b174b7e901ac83d79ca86023e": {
      "address": "0xFA7F6005bD40aa571861Cf23dCb39ad182B02Dbf",
      "txHash": "0xdcc5d8a9d8377bdba5207a02f5929c02728cbddd2441ac67ea4c36c2568c9222",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_astro",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAstroSale)1465",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:23"
          },
          {
            "label": "_rigel",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INFT)2701",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:24"
          },
          {
            "label": "_sirius",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(INFT)2701",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:25"
          },
          {
            "label": "_vega",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(INFT)2701",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:26"
          },
          {
            "label": "_tokenBusd",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(IERC20)2554",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:27"
          },
          {
            "label": "_nftBuyPrices",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:28"
          },
          {
            "label": "collectorAddress",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:29"
          },
          {
            "label": "isAstroNftNeccesary",
            "offset": 20,
            "slot": "259",
            "type": "t_bool",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:30"
          },
          {
            "label": "_nftSettings",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(NFTSettings)1511_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:36"
          },
          {
            "label": "_isValidReferralId",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:37"
          },
          {
            "label": "_allReferrals",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:38"
          },
          {
            "label": "totalPurchasePerLinkPerType",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:39"
          },
          {
            "label": "presaleDis",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:40"
          },
          {
            "label": "_nftInfo",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_uint256,t_struct(NFTSettings)1511_storage)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:41"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "268",
            "type": "t_array(t_string_storage)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:42"
          },
          {
            "label": "_suffix",
            "offset": 0,
            "slot": "271",
            "type": "t_string_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)3_storage": {
            "label": "string[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAstroSale)1465": {
            "label": "contract IAstroSale",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)2554": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(INFT)2701": {
            "label": "contract INFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTSettings)1511_storage)": {
            "label": "mapping(uint256 => struct NFTStakingPresale.NFTSettings)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFTSettings)1511_storage": {
            "label": "struct NFTStakingPresale.NFTSettings",
            "members": [
              {
                "label": "sold",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "total",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e5da39bcba61cba0f84a6be8595959819696216db501aff0cf8ae49ed9ca5d86": {
      "address": "0x4A56378597fc76b632F96E6aCA28c40368D3227e",
      "txHash": "0xed2dcafc9196bdc87dd268ac0b6ad6e5c5a70d32982d759f42cad086a3182227",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/ERC721EnumerableUpgradeable.sol:221"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(Counter)2787_storage",
            "contract": "CepheusStar",
            "src": "contracts/CepheusStar.sol:22"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "402",
            "type": "t_string_storage",
            "contract": "CepheusStar",
            "src": "contracts/CepheusStar.sol:28"
          },
          {
            "label": "_blockTransferUntil",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "CepheusStar",
            "src": "contracts/CepheusStar.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2787_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "abb2b09c87539edb3a9c3ce4b61018bb511b0bde3fd39bbf0adffdb6bcf35ba3": {
      "address": "0x9E1CDb70ABf484926bb5DdC1dB32a7B53eDfdd14",
      "txHash": "0x02928f3d13b05223d6e7a12d53669482bc9529a514845f8d73f5b4368dc353f6",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_astro",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAstroSale)2224",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:23"
          },
          {
            "label": "_rigel",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INFT)3567",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:24"
          },
          {
            "label": "_sirius",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(INFT)3567",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:25"
          },
          {
            "label": "_vega",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(INFT)3567",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:26"
          },
          {
            "label": "_tokenBusd",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(IERC20)3420",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:27"
          },
          {
            "label": "_nftBuyPrices",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:28"
          },
          {
            "label": "collectorAddress",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:29"
          },
          {
            "label": "isAstroNftNeccesary",
            "offset": 20,
            "slot": "259",
            "type": "t_bool",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:30"
          },
          {
            "label": "_isValidReferralId",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:37"
          },
          {
            "label": "_allReferrals",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:38"
          },
          {
            "label": "totalPurchasePerLinkPerType",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:39"
          },
          {
            "label": "presaleDis",
            "offset": 0,
            "slot": "263",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:40"
          },
          {
            "label": "_nftInfo",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_uint256,t_struct(NFTSettings)2270_storage)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:41"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "267",
            "type": "t_array(t_string_storage)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:42"
          },
          {
            "label": "_suffix",
            "offset": 0,
            "slot": "270",
            "type": "t_string_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)3_storage": {
            "label": "string[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAstroSale)2224": {
            "label": "contract IAstroSale",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)3420": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(INFT)3567": {
            "label": "contract INFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTSettings)2270_storage)": {
            "label": "mapping(uint256 => struct NFTStakingPresale.NFTSettings)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFTSettings)2270_storage": {
            "label": "struct NFTStakingPresale.NFTSettings",
            "members": [
              {
                "label": "sold",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "total",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a742d58a5a71fd207eaa936ee0ddd7e77860ca67dd3ac8061ea9d616cbc6218c": {
      "address": "0x0765c2683C8c53d43Fa611ab91F740f429392D10",
      "txHash": "0x262c788f31bcd9e4fe13fe4d9b860f7c382371d1065669d94b52a0c62496707e",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_astro",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAstroSale)1465",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:23"
          },
          {
            "label": "_rigel",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INFT)2855",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:24"
          },
          {
            "label": "_sirius",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(INFT)2855",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:25"
          },
          {
            "label": "_vega",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(INFT)2855",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:26"
          },
          {
            "label": "_tokenBusd",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(IERC20)2708",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:27"
          },
          {
            "label": "_nftBuyPrices",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:28"
          },
          {
            "label": "collectorAddress",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:29"
          },
          {
            "label": "isAstroNftNeccesary",
            "offset": 20,
            "slot": "259",
            "type": "t_bool",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:30"
          },
          {
            "label": "_nftSettings",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(NFTSettings)1511_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:36"
          },
          {
            "label": "_isValidReferralId",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:37"
          },
          {
            "label": "_allReferrals",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:38"
          },
          {
            "label": "totalPurchasePerLinkPerType",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:39"
          },
          {
            "label": "presaleDis",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:40"
          },
          {
            "label": "_nftInfo",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_uint256,t_struct(NFTSettings)1511_storage)",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:41"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "268",
            "type": "t_array(t_string_storage)3_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:42"
          },
          {
            "label": "_suffix",
            "offset": 0,
            "slot": "271",
            "type": "t_string_storage",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:43"
          },
          {
            "label": "_saleEndTime",
            "offset": 0,
            "slot": "272",
            "type": "t_uint256",
            "contract": "NFTStakingPresale",
            "src": "contracts/NFTStakingPresale.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)3_storage": {
            "label": "string[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAstroSale)1465": {
            "label": "contract IAstroSale",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)2708": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(INFT)2855": {
            "label": "contract INFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTSettings)1511_storage)": {
            "label": "mapping(uint256 => struct NFTStakingPresale.NFTSettings)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFTSettings)1511_storage": {
            "label": "struct NFTStakingPresale.NFTSettings",
            "members": [
              {
                "label": "sold",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "total",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8b4f1aecc1d0e47170d93c669f96eef312b0ebf55ee58ed84ece1157c7fab8b1": {
      "address": "0xA27699102dbc7076DFd1bCE14d8ebDd106ceE2fE",
      "txHash": "0x687c0636cc3c67e55e269a4dd192aa8a62ee40b2d43e92d50d24d08e7923953b",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_chainId",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "CepheusDeployer",
            "src": "contracts/CepheusDeployer.sol:50"
          },
          {
            "label": "_userTotalContract",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "CepheusDeployer",
            "src": "contracts/CepheusDeployer.sol:65"
          },
          {
            "label": "_indexToContract",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_struct(ContractData)1466_storage)))",
            "contract": "CepheusDeployer",
            "src": "contracts/CepheusDeployer.sol:67"
          },
          {
            "label": "_contractToPrice",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CepheusDeployer",
            "src": "contracts/CepheusDeployer.sol:70"
          },
          {
            "label": "_collectorAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "CepheusDeployer",
            "src": "contracts/CepheusDeployer.sol:72"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(GeneralInterface)1437",
            "contract": "CepheusDeployer",
            "src": "contracts/CepheusDeployer.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(GeneralInterface)1437": {
            "label": "contract GeneralInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ContractData)1466_storage))": {
            "label": "mapping(address => mapping(uint256 => struct CepheusDeployer.ContractData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_struct(ContractData)1466_storage)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => struct CepheusDeployer.ContractData)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ContractData)1466_storage)": {
            "label": "mapping(uint256 => struct CepheusDeployer.ContractData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ContractData)1466_storage": {
            "label": "struct CepheusDeployer.ContractData",
            "members": [
              {
                "label": "deployer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "contractIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "contractName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "mintable",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "burnable",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "capped",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "role",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              },
              {
                "label": "baseURI",
                "type": "t_bool",
                "offset": 4,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7cc048d29d3d3e085bf424297d1ab2a8aafbba0792f6e877e339bb3d976a098a": {
      "address": "0x01E04AAE123fFf7EE095C382848d4A3969781A6b",
      "txHash": "0xb98bf5476b915411af6e2b70379d7a6d80c4594930a5cee0d46fd30d81da55a2",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_chainId",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "CepheusDeployer",
            "src": "contracts/CepheusDeployer.sol:50"
          },
          {
            "label": "_userTotalContract",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "CepheusDeployer",
            "src": "contracts/CepheusDeployer.sol:65"
          },
          {
            "label": "_indexToContract",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_struct(ContractData)1279_storage)))",
            "contract": "CepheusDeployer",
            "src": "contracts/CepheusDeployer.sol:67"
          },
          {
            "label": "_contractToPrice",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CepheusDeployer",
            "src": "contracts/CepheusDeployer.sol:70"
          },
          {
            "label": "_collectorAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "CepheusDeployer",
            "src": "contracts/CepheusDeployer.sol:72"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(GeneralInterface)1250",
            "contract": "CepheusDeployer",
            "src": "contracts/CepheusDeployer.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(GeneralInterface)1250": {
            "label": "contract GeneralInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ContractData)1279_storage))": {
            "label": "mapping(address => mapping(uint256 => struct CepheusDeployer.ContractData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_struct(ContractData)1279_storage)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => struct CepheusDeployer.ContractData)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ContractData)1279_storage)": {
            "label": "mapping(uint256 => struct CepheusDeployer.ContractData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ContractData)1279_storage": {
            "label": "struct CepheusDeployer.ContractData",
            "members": [
              {
                "label": "deployer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "contractIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "contractName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "mintable",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "burnable",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              },
              {
                "label": "capped",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "role",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              },
              {
                "label": "baseURI",
                "type": "t_bool",
                "offset": 4,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
